{"version":3,"file":"static/js/732.c3641946.chunk.js","mappings":"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","sources":["pages/PhonebookPage/PhonebookPage.styled.jsx","components/ContactElement/ContactElement.styled.jsx","components/ContactElement/ContactElement.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CenteredContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Container = styled.div`\n  border: 1px solid teal;\n  border-radius: 16px;\n  padding: 20px;\n  max-width: 1440px;\n  margin: 10px;\n  min-width: 320px;\n`;\n\nexport const Section = styled.div`\n  padding: 4px;\n`;\n\nexport const MaineTitle = styled.h1`\n  margin-top: 16px;\n  margin-bottom: 20px;\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  margin-bottom: 8px;\n  margin-left: 12px;\n`;\n\nexport const StyledBtn = styled.button`\n  font-size: 12px;\n  max-width: 48px;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: transparent;\n  border: none;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n\n  &:hover {\n    background-color: teal;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\n  }\n`;\n","import { Contact, StyledBtn } from './ContactElement.styled';\n\nexport const ContactElement = ({ name, number, onDelete, isDeleting }) => {\n  return (\n    <Contact>\n      <p>{name}: </p> <p>{number}</p>\n      <StyledBtn onClick={onDelete} disabled={isDeleting}>\n        Delete\n      </StyledBtn>\n    </Contact>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  }\n);\n","import {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport toast from 'react-hot-toast';\nimport { Report } from 'notiflix';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .matches(/^[0-9]+$/, 'Must contain only number - 0123456789')\n    .min(5, 'Must be 5 or more')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = newContact => {\n    const checkName = contacts.some(\n      checkContact =>\n        checkContact.name.toLocaleLowerCase() ===\n        newContact.name.toLocaleLowerCase()\n    );\n\n    if (checkName) {\n      Report.failure(\n        'Notiflix Failure',\n        `Cannot add to contacts this name: ${newContact.name} is already in contacts.`,\n        'Okay'\n      );\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    toast.success('Successfully, new contact creted');\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactSchema}\n      onSubmit={(newContact, actions) => {\n        handleAddContact(newContact);\n        actions.resetForm();\n      }}\n    >\n      {formik => (\n        <Box\n          maxW=\"md\"\n          mx=\"auto\"\n          mt=\"8\"\n          p=\"6\"\n          borderWidth=\"1px\"\n          rounded=\"lg\"\n          borderColor=\"teal\"\n        >\n          <form onSubmit={formik.handleSubmit}>\n            <FormControl\n              id=\"name\"\n              isInvalid={formik.touched.name && formik.errors.name}\n            >\n              <FormLabel>Name</FormLabel>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.name}\n                borderColor=\"teal\"\n              />\n              <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl\n              id=\"number\"\n              isInvalid={formik.touched.number && formik.errors.number}\n              mt=\"4\"\n            >\n              <FormLabel>Number</FormLabel>\n              <Input\n                type=\"text\"\n                name=\"number\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.number}\n                borderColor=\"teal\"\n              />\n              <FormErrorMessage>{formik.errors.number}</FormErrorMessage>\n            </FormControl>\n\n            <Button\n              mt=\"6\"\n              colorScheme=\"teal\"\n              size=\"md\"\n              type=\"submit\"\n              isLoading={formik.isSubmitting}\n            >\n              Add contact\n            </Button>\n          </form>\n        </Box>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 4px;\n`;\n","import { ContactElement } from 'components';\nimport { List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectFilter,\n  selectFilteredContacts,\n} from '../../redux/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContactsList = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const [deletingId, setDeletingId] = useState(null);\n\n  const addFilter = () => {\n    if (filter === '') {\n      return contacts;\n    }\n    return filteredContactsList;\n  };\n  const filteredContacts = addFilter();\n\n  const handleDelete = id => () => {\n    setDeletingId(id);\n    dispatch(deleteContact(id))\n      .then(() => {\n        toast.success('Contact deleted');\n        setDeletingId(null);\n      })\n      .catch(error => {\n        console.error('Delete contact error:', error);\n        setDeletingId(null);\n      });\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(contact => (\n        <ContactElement\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDelete={handleDelete(contact.id)}\n          isDeleting={contact.id === deletingId}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  padding: 4px;\n  border: 1px solid black;\n`;\n\nexport const StyledLabel = styled.label`\n  font-weight: 500;\n`;\n","import { useDispatch } from 'react-redux';\nimport { StyledInput, StyledLabel } from './Filter.styled';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <StyledLabel>\n      Find contacts by name\n      <StyledInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        onChange={evt => dispatch(setFilter(evt.target.value))}\n      />\n    </StyledLabel>\n  );\n};\n","import {\n  CenteredContainer,\n  Container,\n  MaineTitle,\n  Section,\n  Title,\n} from './PhonebookPage.styled';\nimport { ContactForm, Filter, ContactList } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\n\nexport default function PhonebookPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <CenteredContainer>\n      <Container>\n        <Section>\n          <MaineTitle>Phonebook</MaineTitle>\n          <ContactForm />\n        </Section>\n\n        <Section>\n          <Title>Contacts</Title>\n\n          {contacts.length > 0 && !error && <Filter />}\n\n          {isLoading && <p>Loading contacts...</p>}\n          {error && <p>{error}</p>}\n          {contacts.length === 0 && !isLoading && !error && (\n            <p>You don't have any contacts yet</p>\n          )}\n\n          <ContactList />\n        </Section>\n      </Container>\n    </CenteredContainer>\n  );\n}\n"],"names":["CenteredContainer","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Section","_templateObject3","MaineTitle","_templateObject4","Title","_templateObject5","Contact","StyledBtn","ContactElement","_ref","name","number","onDelete","isDeleting","_jsxs","children","_jsx","onClick","disabled","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","contact","toLowerCase","includes","contactSchema","Yup","shape","min","required","matches","ContactForm","dispatch","useDispatch","useSelector","Formik","initialValues","validationSchema","onSubmit","newContact","actions","some","checkContact","toLocaleLowerCase","Report","concat","addContact","toast","handleAddContact","resetForm","formik","Box","maxW","mx","mt","p","borderWidth","rounded","borderColor","handleSubmit","FormControl","id","isInvalid","touched","errors","FormLabel","Input","type","onChange","handleChange","onBlur","handleBlur","value","values","FormErrorMessage","Button","colorScheme","size","isSubmitting","List","ContactList","filteredContactsList","_useState","useState","_useState2","_slicedToArray","deletingId","setDeletingId","filteredContacts","map","deleteContact","then","catch","console","StyledInput","StyledLabel","Filter","placeholder","evt","setFilter","target","PhonebookPage","useEffect","fetchContacts","length"],"sourceRoot":""}