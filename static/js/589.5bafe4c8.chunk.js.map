{"version":3,"file":"static/js/589.5bafe4c8.chunk.js","mappings":"yOAKMA,EAAiBC,EAAAA,GAAW,CAChCC,KAAMD,EAAAA,KAAaE,IAAI,EAAG,cAAcC,SAAS,YACjDC,SAAUJ,EAAAA,KACPE,IAAI,EAAG,wCACPC,SAAS,YACZE,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBF,SAAS,cAG/C,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,KAAM,GACNI,MAAO,GACPD,SAAU,IAEZQ,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,IAGF,OACEC,EAAAA,EAAAA,MAAA,QAAML,SAAUJ,EAAOU,aAAaC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,OAAMF,SAAC,UACtBC,EAAAA,EAAAA,KAAA,SACEE,GAAG,OACHtB,KAAK,OACLuB,KAAK,OACLC,SAAUhB,EAAOiB,aACjBC,OAAQlB,EAAOmB,WACfC,MAAOpB,EAAOK,OAAOgB,YAEtBrB,EAAOsB,QAAQ9B,MAAQQ,EAAOuB,OAAOF,WACpCT,EAAAA,EAAAA,KAAA,OAAAD,SAAMX,EAAOuB,OAAO/B,OAClB,MAEJoB,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,mBACvBC,EAAAA,EAAAA,KAAA,SACEE,GAAG,QACHtB,KAAK,QACLuB,KAAK,QACLC,SAAUhB,EAAOiB,aACjBC,OAAQlB,EAAOmB,WACfC,MAAOpB,EAAOK,OAAOT,QAEtBI,EAAOsB,QAAQ1B,OAASI,EAAOuB,OAAO3B,OACrCgB,EAAAA,EAAAA,KAAA,OAAAD,SAAMX,EAAOuB,OAAO3B,QAClB,MAEJgB,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEE,GAAG,WACHtB,KAAK,WACLuB,KAAK,OACLC,SAAUhB,EAAOiB,aACjBC,OAAQlB,EAAOmB,WACfC,MAAOpB,EAAOK,OAAOV,WAEtBK,EAAOsB,QAAQ3B,UAAYK,EAAOuB,OAAO5B,UACxCiB,EAAAA,EAAAA,KAAA,OAAAD,SAAMX,EAAOuB,OAAO5B,WAClB,MAEJiB,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAC,cAG5B,C","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authOperations';\n\nconst registerSchema = Yup.object({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be minimum 8 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n});\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: registerSchema,\n    onSubmit: (values, actions) => {\n      dispatch(register(values));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.firstName}\n      />\n      {formik.touched.name && formik.errors.firstName ? (\n        <div>{formik.errors.name}</div>\n      ) : null}\n\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      />\n      {formik.touched.email && formik.errors.email ? (\n        <div>{formik.errors.email}</div>\n      ) : null}\n\n      <label htmlFor=\"password\">Password</label>\n      <input\n        id=\"password\"\n        name=\"password\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.password}\n      />\n      {formik.touched.password && formik.errors.password ? (\n        <div>{formik.errors.password}</div>\n      ) : null}\n\n      <button type=\"submit\">Sing Up</button>\n    </form>\n  );\n}\n"],"names":["registerSchema","Yup","name","min","required","password","email","RegisterPage","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","_jsxs","handleSubmit","children","_jsx","htmlFor","id","type","onChange","handleChange","onBlur","handleBlur","value","firstName","touched","errors"],"sourceRoot":""}