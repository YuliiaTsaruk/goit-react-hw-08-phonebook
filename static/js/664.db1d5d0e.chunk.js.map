{"version":3,"file":"static/js/664.db1d5d0e.chunk.js","mappings":"oSAaMA,EAAcC,EAAAA,GAAW,CAC7BC,SAAUD,EAAAA,KACPE,IAAI,EAAG,wCACPC,SAAS,YACZC,MAAOJ,EAAAA,KAAaI,MAAM,yBAAyBD,SAAS,cAG/C,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbN,MAAO,GACPH,SAAU,IAEZU,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACV,IAGF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,KAAK,KACLC,GAAG,OACHC,GAAG,IACHC,EAAE,IACFC,YAAY,MACZC,QAAQ,KACRC,YAAY,OAAMC,UAElBC,EAAAA,EAAAA,MAAA,QAAMf,SAAUJ,EAAOoB,aAAaF,SAAA,EAClCC,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CACVC,GAAG,QACHC,UAAWvB,EAAOwB,QAAQ5B,OAASI,EAAOyB,OAAO7B,MAAMsB,SAAA,EAEvDT,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAR,SAAC,mBACXT,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,QACLC,KAAK,QACLC,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOK,OAAOT,MACrBqB,YAAY,UAEdR,EAAAA,EAAAA,KAAC0B,EAAAA,GAAgB,CAAAjB,SAAElB,EAAOyB,OAAO7B,YAGnCuB,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CACVC,GAAG,WACHC,UAAWvB,EAAOwB,QAAQ/B,UAAYO,EAAOyB,OAAOhC,SACpDoB,GAAG,IAAGK,SAAA,EAENT,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAR,SAAC,cACXT,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,WACLC,KAAK,WACLC,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOK,OAAOZ,SACrBwB,YAAY,UAEdR,EAAAA,EAAAA,KAAC0B,EAAAA,GAAgB,CAAAjB,SAAElB,EAAOyB,OAAOhC,eAGnCgB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLvB,GAAG,IACHwB,YAAY,OACZC,KAAK,KACLV,KAAK,SACLW,UAAWvC,EAAOwC,aAAatB,SAChC,gBAMT,C","sources":["pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n} from '@chakra-ui/react';\n\nconst loginSchema = Yup.object({\n  password: Yup.string()\n    .min(8, 'Must be minimum 8 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n});\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginSchema,\n    onSubmit: (values, actions) => {\n      dispatch(logIn(values));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <Box\n      maxW=\"md\"\n      mx=\"auto\"\n      mt=\"8\"\n      p=\"6\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      borderColor=\"teal\"\n    >\n      <form onSubmit={formik.handleSubmit}>\n        <FormControl\n          id=\"email\"\n          isInvalid={formik.touched.email && formik.errors.email}\n        >\n          <FormLabel>Email Address</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            borderColor=\"teal\"\n          />\n          <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl\n          id=\"password\"\n          isInvalid={formik.touched.password && formik.errors.password}\n          mt=\"4\"\n        >\n          <FormLabel>Password</FormLabel>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            borderColor=\"teal\"\n          />\n          <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n        </FormControl>\n\n        <Button\n          mt=\"6\"\n          colorScheme=\"teal\"\n          size=\"md\"\n          type=\"submit\"\n          isLoading={formik.isSubmitting}\n        >\n          Sign In\n        </Button>\n      </form>\n    </Box>\n  );\n}\n"],"names":["loginSchema","Yup","password","min","required","email","LoginPage","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","_jsx","Box","maxW","mx","mt","p","borderWidth","rounded","borderColor","children","_jsxs","handleSubmit","FormControl","id","isInvalid","touched","errors","FormLabel","Input","type","name","onChange","handleChange","onBlur","handleBlur","value","FormErrorMessage","Button","colorScheme","size","isLoading","isSubmitting"],"sourceRoot":""}