{"version":3,"file":"static/js/589.80887240.chunk.js","mappings":"oSAcMA,EAAiBC,EAAAA,GAAW,CAChCC,KAAMD,EAAAA,KAAaE,IAAI,EAAG,cAAcC,SAAS,YACjDC,SAAUJ,EAAAA,KACPE,IAAI,EAAG,wCACPC,SAAS,YACZE,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBF,SAAS,cAG/C,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,KAAM,GACNI,MAAO,GACPD,SAAU,IAEZQ,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,IAGF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,KAAK,KACLC,GAAG,OACHC,GAAG,IACHC,EAAE,IACFC,YAAY,MACZC,YAAY,OACZC,QAAQ,KAAIC,UAEZC,EAAAA,EAAAA,MAAA,QAAMf,SAAUJ,EAAOoB,aAAaF,SAAA,EAClCC,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CACVC,GAAG,OACHC,UAAWvB,EAAOwB,QAAQhC,MAAQQ,EAAOyB,OAAOjC,KAAK0B,SAAA,EAErDT,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAR,SAAC,UACXT,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,OACLpC,KAAK,OACLqC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,MAAOjC,EAAOK,OAAOb,KACrBwB,YAAY,UAEdP,EAAAA,EAAAA,KAACyB,EAAAA,GAAgB,CAAAhB,SAAElB,EAAOyB,OAAOjC,WAGnC2B,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CACVC,GAAG,QACHC,UAAWvB,EAAOwB,QAAQ5B,OAASI,EAAOyB,OAAO7B,MACjDiB,GAAG,IAAGK,SAAA,EAENT,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAR,SAAC,mBACXT,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,QACLpC,KAAK,QACLqC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,MAAOjC,EAAOK,OAAOT,MACrBoB,YAAY,UAEdP,EAAAA,EAAAA,KAACyB,EAAAA,GAAgB,CAAAhB,SAAElB,EAAOyB,OAAO7B,YAGnCuB,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CACVC,GAAG,WACHC,UAAWvB,EAAOwB,QAAQ7B,UAAYK,EAAOyB,OAAO9B,SACpDkB,GAAG,IAAGK,SAAA,EAENT,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAR,SAAC,cACXT,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,WACLpC,KAAK,WACLqC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,MAAOjC,EAAOK,OAAOV,SACrBqB,YAAY,UAEdP,EAAAA,EAAAA,KAACyB,EAAAA,GAAgB,CAAAhB,SAAElB,EAAOyB,OAAO9B,eAGnCc,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CACLtB,GAAG,IACHuB,YAAY,OACZC,KAAK,KACLT,KAAK,SACLU,UAAWtC,EAAOuC,aAAarB,SAChC,gBAMT,C","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authOperations';\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n} from '@chakra-ui/react';\n\nconst registerSchema = Yup.object({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be minimum 8 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n});\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: registerSchema,\n    onSubmit: (values, actions) => {\n      dispatch(register(values));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <Box\n      maxW=\"md\"\n      mx=\"auto\"\n      mt=\"8\"\n      p=\"6\"\n      borderWidth=\"1px\"\n      borderColor=\"teal\"\n      rounded=\"lg\"\n    >\n      <form onSubmit={formik.handleSubmit}>\n        <FormControl\n          id=\"name\"\n          isInvalid={formik.touched.name && formik.errors.name}\n        >\n          <FormLabel>Name</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n            borderColor=\"teal\"\n          />\n          <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl\n          id=\"email\"\n          isInvalid={formik.touched.email && formik.errors.email}\n          mt=\"4\"\n        >\n          <FormLabel>Email Address</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            borderColor=\"teal\"\n          />\n          <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl\n          id=\"password\"\n          isInvalid={formik.touched.password && formik.errors.password}\n          mt=\"4\"\n        >\n          <FormLabel>Password</FormLabel>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            borderColor=\"teal\"\n          />\n          <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n        </FormControl>\n\n        <Button\n          mt=\"6\"\n          colorScheme=\"teal\"\n          size=\"md\"\n          type=\"submit\"\n          isLoading={formik.isSubmitting}\n        >\n          Sign Up\n        </Button>\n      </form>\n    </Box>\n  );\n}\n"],"names":["registerSchema","Yup","name","min","required","password","email","RegisterPage","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","_jsx","Box","maxW","mx","mt","p","borderWidth","borderColor","rounded","children","_jsxs","handleSubmit","FormControl","id","isInvalid","touched","errors","FormLabel","Input","type","onChange","handleChange","onBlur","handleBlur","value","FormErrorMessage","Button","colorScheme","size","isLoading","isSubmitting"],"sourceRoot":""}